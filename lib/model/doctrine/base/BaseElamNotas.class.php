<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ElamNotas', 'doctrine');

/**
 * BaseElamNotas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $periodo
 * @property string $pasaporte
 * @property string $carrera
 * @property string $materia
 * @property string $seccion
 * @property string $u_curricular
 * @property string $nota
 * 
 * @method integer   getId()           Returns the current record's "id" value
 * @method string    getPeriodo()      Returns the current record's "periodo" value
 * @method string    getPasaporte()    Returns the current record's "pasaporte" value
 * @method string    getCarrera()      Returns the current record's "carrera" value
 * @method string    getMateria()      Returns the current record's "materia" value
 * @method string    getSeccion()      Returns the current record's "seccion" value
 * @method string    getUCurricular()  Returns the current record's "u_curricular" value
 * @method string    getNota()         Returns the current record's "nota" value
 * @method ElamNotas setId()           Sets the current record's "id" value
 * @method ElamNotas setPeriodo()      Sets the current record's "periodo" value
 * @method ElamNotas setPasaporte()    Sets the current record's "pasaporte" value
 * @method ElamNotas setCarrera()      Sets the current record's "carrera" value
 * @method ElamNotas setMateria()      Sets the current record's "materia" value
 * @method ElamNotas setSeccion()      Sets the current record's "seccion" value
 * @method ElamNotas setUCurricular()  Sets the current record's "u_curricular" value
 * @method ElamNotas setNota()         Sets the current record's "nota" value
 * 
 * @package    preinscripcion
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseElamNotas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('elam_notas');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('periodo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pasaporte', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('carrera', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('materia', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('seccion', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('u_curricular', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('nota', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}